{"version":3,"sources":["components/Todo.js","components/TodoList.js","components/AddTodoForm.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","details","className","name","description","TodoList","todos","map","todo","onClick","onDeleteClick","id","AddTodoForm","onSubmit","onFormSubmit","htmlFor","type","value","onChange","onNameChange","placeholder","onDescriptionChange","validation","App","useState","savedTodos","localStorage","getItem","JSON","parse","setTodos","setName","setDescription","setValidation","useEffect","setItem","stringify","event","target","preventDefault","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAEe,SAASA,EAAKC,GACzB,IAAOC,EAAWD,EAAXC,QACP,OAAIA,EAGG,qBAAKC,UAAU,OAAf,SACH,sBAAKA,UAAU,YAAf,UACI,6BAAKD,EAAQE,OACb,4BAAIF,EAAQG,mBALT,KCFA,SAASC,EAASL,GAC7B,OAAO,oBAAIE,UAAU,YAAd,SACFF,EAAMM,MAAMC,KAAI,SAAAC,GAAI,OAAI,+BACzB,cAACT,EAAD,CAAME,QAASO,IACf,wBAAQN,UAAU,yBAAyBO,QAAS,kBAAMT,EAAMU,cAAcF,EAAKG,KAAnF,sBAFkCH,EAAKG,SCHhC,SAASC,EAAYZ,GAClC,OACE,uBAAMa,SAAUb,EAAMc,aAAtB,UACE,gCACE,uBAAOC,QAAQ,YAAf,mBACA,uBACEC,KAAK,OACLC,MAAOjB,EAAMG,KACbe,SAAUlB,EAAMmB,aAChBR,GAAG,YACHS,YAAY,iBACZlB,UAAU,iBAGd,gCACE,uBAAOa,QAAQ,mBAAf,0BACA,uBACEC,KAAK,OACLC,MAAOjB,EAAMI,YACbc,SAAUlB,EAAMqB,oBAChBV,GAAG,sBACHS,YAAY,wBACZlB,UAAU,iBAGd,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,qBAAf,SAAqCF,EAAMsB,aAC3C,uBAAON,KAAK,SAASd,UAAU,kBAAkBe,MAAM,mBC4ChDM,MApEf,WACE,MAA0BC,oBAAS,WACjC,IAAMC,EAAaC,aAAaC,QAAQ,SACxC,OAAIF,EACKG,KAAKC,MAAMJ,GAEX,MALX,mBAAOnB,EAAP,KAAcwB,EAAd,KAQA,EAAwBN,mBAAS,IAAjC,mBAAOrB,EAAP,KAAa4B,EAAb,KACA,EAAsCP,mBAAS,IAA/C,mBAAOpB,EAAP,KAAoB4B,EAApB,KACA,EAAoCR,mBAAS,IAA7C,mBAAOF,EAAP,KAAmBW,EAAnB,KAyCA,OAvCAC,qBAAU,WACRR,aAAaS,QAAQ,QAASP,KAAKQ,UAAU9B,MAC5C,CAACA,IAsCF,sBAAKJ,UAAU,MAAf,UACE,cAACU,EAAD,CACET,KAAMA,EACNC,YAAaA,EACbkB,WAAYA,EACZH,aAlBmB,SAACkB,GACxBN,EAAQM,EAAMC,OAAOrB,QAkBjBI,oBAf0B,SAACgB,GAC/BL,EAAeK,EAAMC,OAAOrB,QAexBH,aA3CmB,SAACuB,GACxBA,EAAME,iBAEDpC,GACH8B,EAAc,uBAEX7B,GACH6B,EAAc,8BAEhBH,EAAS,GAAD,mBACHxB,GADG,cAGJK,GAAIL,EAAMkC,OAAS,EACnBrC,KAAMA,EACNC,eALI,cAMJA,MAGJ2B,EAAQ,IACRC,EAAe,IACfC,EAAc,OAyBZ,8BAAuB,IAAjB3B,EAAMkC,QAAgB,sDAC5B,cAACnC,EAAD,CAAUC,MAAOA,EAAOI,cAfF,SAACC,GACzBmB,EAASxB,EAAMmC,QAAO,SAACjC,GAAD,OAAUA,EAAKG,KAAOA,aC1CjC+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a93c9510.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Todo(props){\r\n    const {details} = props\r\n    if(!details){\r\n        return null\r\n    }\r\n    return <div className=\"todo\">\r\n        <div className=\"todo-info\">\r\n            <h2>{details.name}</h2>\r\n            <p>{details.description}</p>\r\n        </div>\r\n    </div>\r\n}","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nexport default function TodoList(props){\r\n    return <ul className=\"todo-list\">\r\n        {props.todos.map(todo => <li key={todo.id}>\r\n        <Todo details={todo} />\r\n        <button className=\"btn-outline btn-delete\" onClick={() => props.onDeleteClick(todo.id)}>Delete</button>\r\n        </li>)}\r\n    </ul>\r\n}","import React from \"react\";\r\n\r\nexport default function AddTodoForm(props) {\r\n  return (\r\n    <form onSubmit={props.onFormSubmit}>\r\n      <div>\r\n        <label htmlFor=\"todo-name\">Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={props.name}\r\n          onChange={props.onNameChange}\r\n          id=\"todo-name\"\r\n          placeholder=\"Enter the name\"\r\n          className=\"textfield\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"todo-description\">Description:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={props.description}\r\n          onChange={props.onDescriptionChange}\r\n          id=\"product-description\"\r\n          placeholder=\"Enter the description\"\r\n          className=\"textfield\"\r\n        />\r\n      </div>\r\n      <div className=\"form-footer\">\r\n        <div className=\"validation-message\">{props.validation}</div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Add Todo\" />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport TodoList from \"./components/TodoList.js\";\nimport AddTodoForm from \"./components/AddTodoForm.js\";\n\nfunction App() {\n  const [todos, setTodos] = useState(() => {\n    const savedTodos = localStorage.getItem(\"todos\");\n    if (savedTodos) {\n      return JSON.parse(savedTodos);\n    } else {\n      return [];\n    }\n  });\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [validation, setValidation] = useState(\"\");\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    if (!name) {\n      setValidation(\"Please enter a name\");\n    }\n    if (!description) {\n      setValidation(\"Please enter a description\");\n    }\n    setTodos([\n      ...todos,\n      {\n        id: todos.length + 1,\n        name: name,\n        description,\n        description,\n      },\n    ]);\n    setName(\"\");\n    setDescription(\"\");\n    setValidation(\"\");\n  };\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n\n  const handleDeleteClick = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  return (\n    <div className=\"App\">\n      <AddTodoForm\n        name={name}\n        description={description}\n        validation={validation}\n        onNameChange={handleNameChange}\n        onDescriptionChange={handleDescriptionChange}\n        onFormSubmit={handleFormSubmit}\n      />\n      <div>{todos.length === 0 && <p>Add your first Todo</p>}</div>\n      <TodoList todos={todos} onDeleteClick={handleDeleteClick} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}